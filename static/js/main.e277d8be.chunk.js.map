{"version":3,"sources":["components/Searcher.js","components/WeatherResults.js","components/Error.js","components/App.js","reportWebVitals.js","index.js"],"names":["Searcher","props","className","onSubmit","ev","preventDefault","getDataFromApi","htmlFor","id","type","placeholder","value","city","onChange","handleFilter","target","console","log","WeatherResults","showedImage","weather","main","name","country","temp","Error","api","App","useState","setCity","setWeather","hasError","setHasError","handleErrors","response","ok","statusText","data","fetch","then","json","result","sys","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA6BiBA,MA3BjB,SAAkBC,GAYd,OACE,uBAAMC,UAAU,eAAeC,SANX,SAACC,GACrBA,EAAGC,iBACHJ,EAAMK,kBAIN,UACI,uBAAOC,QAAQ,OAAf,SACA,uBAAOL,UAAU,YACTM,GAAG,OACJC,KAAK,OACLC,YAAY,eACZC,MAAOV,EAAMW,KACbC,SAlBa,SAACT,GACzBH,EAAMa,aAAaV,EAAGW,OAAOJ,OAC7BK,QAAQC,IAAIb,EAAGW,OAAOJ,YAkBlB,wBAAQT,UAAU,kBAAkBO,KAAK,SAAzC,SAAkD,mBAAGP,UAAU,6B,KCcxDgB,MApCjB,SAAwBjB,GACtB,IAAIkB,EAAc,GAGlB,OADWlB,EAAMmB,QAAQC,MAEvB,IAAK,OACHF,EAAc,gBAEd,MACF,IAAK,SACHA,EAAc,eACd,MACF,IAAK,QACHA,EAAc,mBACd,MACF,IAAK,OACHA,EAAc,eACd,MACF,QACEA,EAAc,GAGhB,OACE,sBAAKjB,UAAU,cAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,6BAAKD,EAAMmB,QAAQE,OACnB,6BAAKrB,EAAMmB,QAAQG,aAErB,sBAAKrB,UAAU,eAAf,UACE,4BAAIiB,IACJ,iCAAOlB,EAAMmB,QAAQI,KAArB,mBCfSC,MAdnB,WACM,OACE,sBAAKvB,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAIf,qBAAKA,UAAU,eAAf,SACE,8GCHNwB,EACC,mCADDA,EAEE,2CAuDOC,MApDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNhB,EADM,KACAiB,EADA,OAEiBD,mBAAS,IAF1B,mBAENR,EAFM,KAEGU,EAFH,OAGmBF,oBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,KAWPC,EAAe,SAACC,GACpB,IAAKA,EAASC,GAEV,MADAH,GAAY,GACNP,EAAMS,EAASE,YAEzB,OAAOF,GAsBT,OAFAlB,QAAQC,IAAIG,GAGV,sBAAKlB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,yBAGA,iCACE,cAAC,EAAD,CAAUY,aAvCK,SAACuB,GACpBR,EAAQQ,GACRrB,QAAQC,IAAI,sBAAuBoB,IAqCO/B,eAzBrB,WACrB,OAAOgC,MAAM,GAAD,OAAIZ,EAAJ,qBAAyBd,EAAzB,+BAAoDc,IAC7Da,KAAKN,GACLM,MAAK,SAACL,GAAD,OAAcA,EAASM,UAC5BD,MAAK,SAACF,GACL,IAAMI,EAAS,CACbnB,KAAMe,EAAKf,KACXC,QAASc,EAAKK,IAAInB,QAClBF,KAAMgB,EAAKjB,QAAQ,GAAGC,KACtBG,KAAMa,EAAKhB,KAAKG,KAAKmB,QAAQ,IAE/Bb,EAAWW,GACXZ,EAAQ,IACRG,GAAY,OAY0DpB,KAAMA,KAC9D,IAAbmB,EAAoB,cAAC,EAAD,IAAmC,oBAAhBX,EAAQC,KAChD,cAAC,EAAD,CAAgBD,QAASA,IAAc,UC/ChCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.e277d8be.chunk.js","sourcesContent":["import '../stylesheets/Searcher.css';\r\n\r\nfunction Searcher(props) {\r\n\r\n    const handleFilterChild = (ev) => {\r\n      props.handleFilter(ev.target.value);\r\n      console.log(ev.target.value);\r\n    };\r\n\r\n    const submitHandler = (ev) => {\r\n      ev.preventDefault();\r\n      props.getDataFromApi();\r\n    };\r\n\r\n    return (\r\n      <form className=\"Searcher-box\" onSubmit={submitHandler}>\r\n          <label htmlFor=\"city\">\r\n          <input className=\"Input-box\"\r\n                  id=\"city\"\r\n                 type=\"text\" \r\n                 placeholder=\"Enter a city\"\r\n                 value={props.city}\r\n                 onChange={handleFilterChild}></input>\r\n          </label>\r\n          <button className=\"Searcher-button\" type=\"submit\"><i className=\"fa fa-search fa-2x\"></i></button>\r\n      </form>\r\n    );\r\n  }\r\n  \r\n  export default Searcher;","import '../stylesheets/WeatherResults.css';\r\n\r\nfunction WeatherResults(props) {\r\n  let showedImage = \"\";\r\n  // let temp = \"\";\r\n  let info = props.weather.main;\r\n  switch (info) {\r\n    case 'Rain':\r\n      showedImage = 'Imagen lluvia';\r\n      // temp = `{<span>Temp: {props.weather.temp} ºC</span>}`;\r\n      break;\r\n    case 'Clouds':\r\n      showedImage = 'Imagen nubes';\r\n      break;\r\n    case 'Clear':\r\n      showedImage = 'Imagen despejado';\r\n      break;\r\n    case 'Snow':\r\n      showedImage = 'Imagen nieve';\r\n      break;\r\n    default:\r\n      showedImage = '';\r\n  }\r\n\r\n    return (\r\n      <div className=\"Results-box\">\r\n        <div className=\"Info-localization\">\r\n          <h2>{props.weather.name}</h2>\r\n          <h3>{props.weather.country}</h3>\r\n        </div>\r\n        <div className=\"Info-weather\">\r\n          <p>{showedImage}</p>\r\n          <span>{props.weather.temp} ºC</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default WeatherResults;","import '../stylesheets/WeatherResults.css';\r\n\r\n\r\nfunction Error() {\r\n      return (\r\n        <div className=\"Results-box\">\r\n          <div className=\"Info-localization\">\r\n            {/* <h2>{props.weather.name}</h2>\r\n            <h3>{props.weather.country}</h3> */}\r\n          </div>\r\n          <div className=\"Info-weather\">\r\n            <span>La ubicación que buscas no se encuentra. Inténtalo de nuevo!!!</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default Error;","// import logo from '../images/logo.svg';\nimport React, {  useState } from 'react';\nimport '../stylesheets/App.css';\nimport Searcher from './Searcher';\nimport WeatherResults from './WeatherResults';\nimport Error from './Error';\n\n\nconst api = {\n  key: 'ed3ba494204f4abf63ac338fab10dd22',\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n\n  const handleFilter = (data) => {\n    setCity(data);\n    console.log('Se tiene que buscar', data);\n  }\n\n\n  const handleErrors = (response) => {\n    if (!response.ok) {\n        setHasError(true);\n        throw Error(response.statusText);\n  }\n    return response;\n  }\n\n  const getDataFromApi = () => {\n    return fetch(`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`)\n      .then(handleErrors)\n      .then((response) => response.json())\n      .then((data) => {\n        const result = {\n          name: data.name,\n          country: data.sys.country,\n          main: data.weather[0].main,\n          temp: data.main.temp.toFixed(0)\n        }\n        setWeather(result);\n        setCity(\"\");\n        setHasError(false);\n        });\n  };\n\n  console.log(weather);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Weather APP\n      </header>\n      <main>\n        <Searcher handleFilter={handleFilter} getDataFromApi={getDataFromApi} city={city}/>\n        {hasError === true ? <Error/> : (typeof weather.main != \"undefined\") ? \n        <WeatherResults weather={weather}/> : (\"\")} \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}